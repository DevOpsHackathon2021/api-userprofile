# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the workflow will run
on:
  push:
    branches: [ main ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      ACRNAME: openhackx6e34ru4acr
      APINAME: api-userprofile

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3.1.0

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDS }}
    
      - name: Push image to container registry
        run: az acr build --image "devopsoh/${{ env.APINAME }}:${{ github.sha }}" --registry ${{ env.ACRNAME }} .

  deploy_staging:
    # The type of runner that the job will run on
    if: success()
    needs: deploy_image
    runs-on: ubuntu-latest
    env:
      ACRNAME: openhackx6e34ru4acr
      APPNAME: openhackx6e34ru4userprofile
      APINAME: api-userprofile

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: ${{env.APPNAME}}
          slot-name: staging
          images: '${{env.ACRNAME}}.azurecr.io/devopsoh/${{ env.APINAME }}:${{github.sha}}'

      - name: Health check
        run: |
          chmod +x ./polling.sh
          ./polling.sh -i ${APPNAME}-staging.azurewebsites.net/api/healthcheck/user

  deploy_production:
    if: success()             # Deploy only when staging deploy and health check was successful
    needs: deploy_staging      # Wait for deploy
    runs-on: ubuntu-latest
    
    env:
      ACRNAME: openhackx6e34ru4acr
      APPNAME: openhackx6e34ru4userprofile
      APPRSG: openhackx6e34ru4rg
      APINAME: api-userprofile
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      - name: Swap Staging and Production slots
        run: az webapp deployment slot swap -g ${{env.APPRSG}} -n ${{env.APPNAME}} --slot staging --target-slot production

      - name: Health check
        run: |
          chmod +x ./polling.sh
          ./polling.sh -i ${{env.APPNAME}}.azurewebsites.net/api/healthcheck/user

  rollback:
    if: failure()             # Deploy only when staging deploy and health check was successful
    needs: deploy_production      # Wait for deploy
    runs-on: ubuntu-latest
    
    env:
      APPNAME: openhackx6e34ru4userprofile
      APPRSG: openhackx6e34ru4rg
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDS }}

      - name: Swap Staging and Production slots
        run: az webapp deployment slot swap -g ${{env.APPRSG}} -n ${{env.APPNAME}} --slot staging --target-slot production

      - uses: nashmaniac/create-issue-action@v1.1
        name: Create Issue Action
        if: ${{ failure() }}
        with:
          title: Production deployment Failed
          token: ${{secrets.GITHUB_TOKEN}}
          assignees: ${{github.actor}}
          labels: production-deployment-failed
          body: Deployment to production failed ${{github.sha}}